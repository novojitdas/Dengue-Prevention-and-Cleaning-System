{"ast":null,"code":"import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","map":{"version":3,"sources":["/media/darklord/Head Quarter/00.PROJECT/dengue-prevention-and-cleaning-system/node_modules/@react-leaflet/core/esm/component.js"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","createPortal","LeafletProvider","createContainerComponent","useElement","ContainerComponent","props","ref","instance","context","current","children","createElement","value","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","updateOverlay","update","contentNode","_contentNode","createLeafComponent","LeafComponent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,QAA5D,QAA4E,OAA5E;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAO,SAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AACnD,WAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AACtC,UAAM;AACJC,MAAAA,QADI;AAEJC,MAAAA;AAFI,QAGFL,UAAU,CAACE,KAAD,CAAV,CAAkBI,OAHtB;AAIAX,IAAAA,mBAAmB,CAACQ,GAAD,EAAM,MAAMC,QAAZ,CAAnB;AACA,WAAOF,KAAK,CAACK,QAAN,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,aAAaf,KAAK,CAACgB,aAAN,CAAoBV,eAApB,EAAqC;AACvFW,MAAAA,KAAK,EAAEJ;AADgF,KAArC,EAEjDH,KAAK,CAACK,QAF2C,CAApD;AAGD;;AAED,SAAO,aAAad,UAAU,CAACQ,kBAAD,CAA9B;AACD;AACD,OAAO,SAASS,yBAAT,CAAmCV,UAAnC,EAA+C;AACpD,WAASW,gBAAT,CAA0BT,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,UAAM,CAACS,MAAD,EAASC,OAAT,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,UAAM;AACJQ,MAAAA;AADI,QAEFJ,UAAU,CAACE,KAAD,EAAQW,OAAR,CAAV,CAA2BP,OAF/B;AAGAX,IAAAA,mBAAmB,CAACQ,GAAD,EAAM,MAAMC,QAAZ,CAAnB;AACAV,IAAAA,SAAS,CAAC,SAASoB,aAAT,GAAyB;AACjC,UAAIF,MAAJ,EAAY;AACVR,QAAAA,QAAQ,CAACW,MAAT;AACD;AACF,KAJQ,EAIN,CAACX,QAAD,EAAWQ,MAAX,EAAmBV,KAAK,CAACK,QAAzB,CAJM,CAAT,CANoC,CAUI;;AAExC,UAAMS,WAAW,GAAGZ,QAAQ,CAACa,YAA7B;AACA,WAAOD,WAAW,GAAG,aAAanB,YAAY,CAACK,KAAK,CAACK,QAAP,EAAiBS,WAAjB,CAA5B,GAA4D,IAA9E;AACD;;AAED,SAAO,aAAavB,UAAU,CAACkB,gBAAD,CAA9B;AACD;AACD,OAAO,SAASO,mBAAT,CAA6BlB,UAA7B,EAAyC;AAC9C,WAASmB,aAAT,CAAuBjB,KAAvB,EAA8BC,GAA9B,EAAmC;AACjC,UAAM;AACJC,MAAAA;AADI,QAEFJ,UAAU,CAACE,KAAD,CAAV,CAAkBI,OAFtB;AAGAX,IAAAA,mBAAmB,CAACQ,GAAD,EAAM,MAAMC,QAAZ,CAAnB;AACA,WAAO,IAAP;AACD;;AAED,SAAO,aAAaX,UAAU,CAAC0B,aAAD,CAA9B;AACD","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}"]},"metadata":{},"sourceType":"module"}