{"ast":null,"code":"import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","map":{"version":3,"sources":["/media/darklord/Head Quarter/00.PROJECT/dengue-prevention-and-cleaning-system/node_modules/@react-leaflet/core/esm/layer.js"],"names":["useEffect","useAttribution","useLeafletContext","useEventHandlers","withPane","useLayerLifecycle","element","context","addLayer","container","layerContainer","map","instance","removeLayer","_context$layersContro","layersControl","createLayerHook","useElement","useLayer","props","elementRef","attribution","current","eventHandlers"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAClDP,EAAAA,SAAS,CAAC,SAASQ,QAAT,GAAoB;AAC5B,UAAMC,SAAS,GAAGF,OAAO,CAACG,cAAR,IAA0BH,OAAO,CAACI,GAApD;AACAF,IAAAA,SAAS,CAACD,QAAV,CAAmBF,OAAO,CAACM,QAA3B;AACA,WAAO,SAASC,WAAT,GAAuB;AAC5B,UAAIC,qBAAJ;;AAEA,OAACA,qBAAqB,GAAGP,OAAO,CAACQ,aAAjC,KAAmD,IAAnD,GAA0D,KAAK,CAA/D,GAAmED,qBAAqB,CAACD,WAAtB,CAAkCP,OAAO,CAACM,QAA1C,CAAnE;AACAL,MAAAA,OAAO,CAACI,GAAR,CAAYE,WAAZ,CAAwBP,OAAO,CAACM,QAAhC;AACD,KALD;AAMD,GATQ,EASN,CAACL,OAAD,EAAUD,OAAV,CATM,CAAT;AAUD;AACD,OAAO,SAASU,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,UAAMZ,OAAO,GAAGL,iBAAiB,EAAjC;AACA,UAAMkB,UAAU,GAAGH,UAAU,CAACb,QAAQ,CAACe,KAAD,EAAQZ,OAAR,CAAT,EAA2BA,OAA3B,CAA7B;AACAN,IAAAA,cAAc,CAACM,OAAO,CAACI,GAAT,EAAcQ,KAAK,CAACE,WAApB,CAAd;AACAlB,IAAAA,gBAAgB,CAACiB,UAAU,CAACE,OAAZ,EAAqBH,KAAK,CAACI,aAA3B,CAAhB;AACAlB,IAAAA,iBAAiB,CAACe,UAAU,CAACE,OAAZ,EAAqBf,OAArB,CAAjB;AACA,WAAOa,UAAP;AACD,GAPD;AAQD","sourcesContent":["import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}"]},"metadata":{},"sourceType":"module"}