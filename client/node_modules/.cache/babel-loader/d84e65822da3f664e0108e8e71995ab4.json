{"ast":null,"code":"import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});","map":{"version":3,"sources":["/media/darklord/Head Quarter/00.PROJECT/dengue-prevention-and-cleaning-system/node_modules/react-leaflet/esm/ImageOverlay.js"],"names":["createLayerComponent","updateMediaOverlay","ImageOverlay","LeafletImageOverlay","createImageOveraly","bounds","url","options","ctx","instance","context","overlayContainer","updateImageOverlay","overlay","props","prevProps","setUrl"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;AACA,SAASC,YAAY,IAAIC,mBAAzB,QAAoD,SAApD;AACA,OAAO,MAAMD,YAAY,GAAGF,oBAAoB,CAAC,SAASI,kBAAT,CAA4B;AAC3EC,EAAAA,MAD2E;AAE3EC,EAAAA,GAF2E;AAG3E,KAAGC;AAHwE,CAA5B,EAI9CC,GAJ8C,EAIzC;AACN,QAAMC,QAAQ,GAAG,IAAIN,mBAAJ,CAAwBG,GAAxB,EAA6BD,MAA7B,EAAqCE,OAArC,CAAjB;AACA,SAAO;AACLE,IAAAA,QADK;AAELC,IAAAA,OAAO,EAAE,EAAE,GAAGF,GAAL;AACPG,MAAAA,gBAAgB,EAAEF;AADX;AAFJ,GAAP;AAMD,CAZ+C,EAY7C,SAASG,kBAAT,CAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuD;AACxDd,EAAAA,kBAAkB,CAACY,OAAD,EAAUC,KAAV,EAAiBC,SAAjB,CAAlB;;AAEA,MAAID,KAAK,CAACR,GAAN,KAAcS,SAAS,CAACT,GAA5B,EAAiC;AAC/BO,IAAAA,OAAO,CAACG,MAAR,CAAeF,KAAK,CAACR,GAArB;AACD;AACF,CAlB+C,CAAzC","sourcesContent":["import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});"]},"metadata":{},"sourceType":"module"}