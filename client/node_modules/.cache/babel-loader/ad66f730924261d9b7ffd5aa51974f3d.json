{"ast":null,"code":"import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { VideoOverlay as LeafletVideoOverlay } from 'leaflet';\nexport const VideoOverlay = createLayerComponent(function createVideoOverlay({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletVideoOverlay(url, bounds, options);\n\n  if (options.play === true) {\n    var _instance$getElement;\n\n    (_instance$getElement = instance.getElement()) == null ? void 0 : _instance$getElement.play();\n  }\n\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateVideoOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (typeof props.url === 'string' && props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n\n  const video = overlay.getElement();\n\n  if (video != null) {\n    if (props.play === true && !prevProps.play) {\n      video.play();\n    } else if (!props.play && prevProps.play === true) {\n      video.pause();\n    }\n  }\n});","map":{"version":3,"sources":["/media/darklord/Head Quarter/00.PROJECT/dengue-prevention-and-cleaning-system/node_modules/react-leaflet/esm/VideoOverlay.js"],"names":["createLayerComponent","updateMediaOverlay","VideoOverlay","LeafletVideoOverlay","createVideoOverlay","bounds","url","options","ctx","instance","play","_instance$getElement","getElement","context","overlayContainer","updateVideoOverlay","overlay","props","prevProps","setUrl","video","pause"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;AACA,SAASC,YAAY,IAAIC,mBAAzB,QAAoD,SAApD;AACA,OAAO,MAAMD,YAAY,GAAGF,oBAAoB,CAAC,SAASI,kBAAT,CAA4B;AAC3EC,EAAAA,MAD2E;AAE3EC,EAAAA,GAF2E;AAG3E,KAAGC;AAHwE,CAA5B,EAI9CC,GAJ8C,EAIzC;AACN,QAAMC,QAAQ,GAAG,IAAIN,mBAAJ,CAAwBG,GAAxB,EAA6BD,MAA7B,EAAqCE,OAArC,CAAjB;;AAEA,MAAIA,OAAO,CAACG,IAAR,KAAiB,IAArB,EAA2B;AACzB,QAAIC,oBAAJ;;AAEA,KAACA,oBAAoB,GAAGF,QAAQ,CAACG,UAAT,EAAxB,KAAkD,IAAlD,GAAyD,KAAK,CAA9D,GAAkED,oBAAoB,CAACD,IAArB,EAAlE;AACD;;AAED,SAAO;AACLD,IAAAA,QADK;AAELI,IAAAA,OAAO,EAAE,EAAE,GAAGL,GAAL;AACPM,MAAAA,gBAAgB,EAAEL;AADX;AAFJ,GAAP;AAMD,CAnB+C,EAmB7C,SAASM,kBAAT,CAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuD;AACxDjB,EAAAA,kBAAkB,CAACe,OAAD,EAAUC,KAAV,EAAiBC,SAAjB,CAAlB;;AAEA,MAAI,OAAOD,KAAK,CAACX,GAAb,KAAqB,QAArB,IAAiCW,KAAK,CAACX,GAAN,KAAcY,SAAS,CAACZ,GAA7D,EAAkE;AAChEU,IAAAA,OAAO,CAACG,MAAR,CAAeF,KAAK,CAACX,GAArB;AACD;;AAED,QAAMc,KAAK,GAAGJ,OAAO,CAACJ,UAAR,EAAd;;AAEA,MAAIQ,KAAK,IAAI,IAAb,EAAmB;AACjB,QAAIH,KAAK,CAACP,IAAN,KAAe,IAAf,IAAuB,CAACQ,SAAS,CAACR,IAAtC,EAA4C;AAC1CU,MAAAA,KAAK,CAACV,IAAN;AACD,KAFD,MAEO,IAAI,CAACO,KAAK,CAACP,IAAP,IAAeQ,SAAS,CAACR,IAAV,KAAmB,IAAtC,EAA4C;AACjDU,MAAAA,KAAK,CAACC,KAAN;AACD;AACF;AACF,CAnC+C,CAAzC","sourcesContent":["import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { VideoOverlay as LeafletVideoOverlay } from 'leaflet';\nexport const VideoOverlay = createLayerComponent(function createVideoOverlay({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletVideoOverlay(url, bounds, options);\n\n  if (options.play === true) {\n    var _instance$getElement;\n\n    (_instance$getElement = instance.getElement()) == null ? void 0 : _instance$getElement.play();\n  }\n\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateVideoOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (typeof props.url === 'string' && props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n\n  const video = overlay.getElement();\n\n  if (video != null) {\n    if (props.play === true && !prevProps.play) {\n      video.play();\n    } else if (!props.play && prevProps.play === true) {\n      video.pause();\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}